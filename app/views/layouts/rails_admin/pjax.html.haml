:javascript
  $('.nav.nav-pills li.active').removeClass('active');
  $('.nav.nav-pills li[data-model="#{@abstract_model.to_param}"]').addClass('active');
:ruby
  pjax_container_options =  @parent_object || params[:pjax_nested] ? {:'data-pjax-container' => true, :class => 'pjax-nested-container' } : {}
%title= "#{@abstract_model.try(:pretty_name) || @page_name} | #{[_get_plugin_name[0] || 'Rails', _get_plugin_name[1] || 'Admin'].join(' ')}"
%br
- if !params[:pjax_nested] &&  @action.present?
  - if @parent_object.present?
    = parent_breadcrumb
  - else
    = breadcrumb

- flash && flash.each do |key, value|
  .alert.alert-dismissible{class: flash_alert_class(key)}
    %button.close{type: 'button', :'data-dismiss' => "alert"} &times;
    = value

- if !params[:pjax_nested] &&  @action.present?
  .page-header
    %h3= @page_name

  - if @parent_object.present?
    %ul.nav.nav-tabs
      = index_menu_for(@parent_abstract_model, @parent_object)
      = menu_for((@parent_abstract_model ? (@parent_object.try(:persisted?) ? :member : :collection) : :root), @parent_abstract_model, @parent_object)
      = menu_for_associations((@parent_abstract_model ? (@parent_object.try(:persisted?) ? :member : :collection) : :root), @parent_abstract_model, @parent_object)

- if @action.present?
  = nested_breadcrumb if @parent_object
  - if @parent_object.present?
    %div{:id => random_id}
      %ul.nav.nav-tabs
        = index_nested_menu_for(@parent_abstract_model, @parent_object, @association_name, @nested_abstract_model, @nested_object)
        = nested_menu_for(:has_many_nested_member, @parent_abstract_model, @parent_object, @association_name, @nested_abstract_model, @nested_object) if @nested_object && @nested_object.persisted?
        = nested_menu_for_associations(@nested_object.try(:persisted?) ? :has_many_nested_member : :has_many_nested_collection, @nested_abstract_model, @nested_object)
        = content_for :contextual_tabs
      = yield

  - else
    %div{:id => random_id}
      %ul.nav.nav-tabs
        = menu_for(:root) unless @abstract_model
        = menu_for(:collection, @abstract_model, @object) if @abstract_model && (!@object || (@object && !@object.persisted?))
        = index_menu_for(@abstract_model, @object) if @object && @object.persisted?
        = menu_for(:member, @abstract_model, @object) if @object && @object.persisted?
        = menu_for_associations(:member, @abstract_model, @object) if @object && @object.persisted?
        = content_for :contextual_tabs
      = yield

- else
  = yield
