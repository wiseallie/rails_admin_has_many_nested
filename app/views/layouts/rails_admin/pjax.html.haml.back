<script type="text/javascript">
  $('.nav.nav-pills li.active').removeClass('active');
  $('.nav.nav-pills li[data-model="#{@abstract_model.to_param}"]').addClass('active');
</script>
%title= "#{@abstract_model.try(:pretty_name) || @page_name} | #{[_get_plugin_name[0] || 'Rails', _get_plugin_name[1] || 'Admin'].join(' ')}"
%br
- if true #!params[:pjax_nested] &&  @action.present?
  - if @parent_object.present?
    = parent_breadcrumb
  - else
    = breadcrumb

- flash && flash.each do |key, value|
  .alert.alert-dismissible{class: flash_alert_class(key)}
    %button.close{type: 'button', :'data-dismiss' => "alert"} &times;
    = value

- if true #@action.present?
  - if true #!params[:pjax_nested]
    .page-header
      %h3= @page_name

  - if true #@parent_object.present?
    %ul.nav.nav-tabs
      = index_menu_for(@parent_abstract_model, @parent_object)
      = menu_for((@parent_abstract_model ? (@parent_object.try(:persisted?) ? :member : :collection) : :root), @parent_abstract_model, @parent_object)
      = menu_for_associations((@parent_abstract_model ? (@parent_object.try(:persisted?) ? :member : :collection) : :root), @parent_abstract_model, @parent_object)

  - if true #@parent_object.present?
    %div.pjax-nested-container{:id => random_id, :'data-pjax-container' => true}
      = nested_breadcrumb
      %ul.nav.nav-tabs
        = nested_menu_for(:nested_collection, @parent_abstract_model, @parent_object, @association_name, @nested_abstract_model, @nested_object) unless  @nested_object.try(:persisted?)
        = index_nested_menu_for(@parent_abstract_model, @parent_object, @association_name, @nested_abstract_model, @nested_object) if @nested_object.try(:persisted?)
        = nested_menu_for(:nested_member, @parent_abstract_model, @parent_object, @association_name, @nested_abstract_model, @nested_object) if @nested_object.try(:persisted?)
        = nested_menu_for_associations(:nested_member, @nested_abstract_model, @nested_object) if @nested_object.try(:persisted?)
        = content_for :contextual_tabs
      = yield

  - else
    %div{:id => random_id}
      %ul.nav.nav-tabs
        = menu_for(:root) unless @abstract_model
        = menu_for(:collection, @abstract_model, @object) unless  @object.try(:persisted?)
        = index_menu_for(@abstract_model, @object) if @object.try(:persisted?)
        = menu_for(:member, @abstract_model, @object) if @object.try(:persisted?)
        = menu_for_associations(:member, @abstract_model, @object) if @object.try(:persisted?)
        = content_for :contextual_tabs
      = yield

- else
  = yield
